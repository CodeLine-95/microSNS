// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	common "github.com/jobhandsome/microSNS/app/backend/internal/handler/common"
	section "github.com/jobhandsome/microSNS/app/backend/internal/handler/section"
	topic "github.com/jobhandsome/microSNS/app/backend/internal/handler/topic"
	user "github.com/jobhandsome/microSNS/app/backend/internal/handler/user"
	"github.com/jobhandsome/microSNS/app/backend/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/common/login",
				Handler: common.LoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/admin"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/info",
				Handler: user.UserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/edit-pass",
				Handler: user.EditPassHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/admin/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/lists",
				Handler: section.SectionListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/admin/section"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/lists",
				Handler: topic.TopicListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/detail",
				Handler: topic.TopicDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/create",
				Handler: topic.TopicCreateHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/delete",
				Handler: topic.TopicDeleteHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/admin/topic"),
	)
}
