// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	cate "github.com/jobhandsome/microSNS/app/frontend/internal/handler/cate"
	common "github.com/jobhandsome/microSNS/app/frontend/internal/handler/common"
	topic "github.com/jobhandsome/microSNS/app/frontend/internal/handler/topic"
	user "github.com/jobhandsome/microSNS/app/frontend/internal/handler/user"
	"github.com/jobhandsome/microSNS/app/frontend/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/common/register",
				Handler: common.RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/common/login",
				Handler: common.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/common/send-email-code",
				Handler: common.SendEmailCodeHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/checkins",
				Handler: user.UserCheckinsHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/integral",
				Handler: user.UserIntegralHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/topic/lists",
				Handler: topic.TopicListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/topic/detail",
				Handler: topic.TopicDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/topic/create",
				Handler: topic.TopicCreateHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/topic/delete",
				Handler: topic.TopicDeleteHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/cate/lists",
				Handler: cate.CateListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1"),
	)
}
